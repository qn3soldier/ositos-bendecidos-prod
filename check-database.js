import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://rqqqkquovwvsegaluxwe.supabase.co';
const supabaseServiceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJxcXFrcXVvdnd2c2VnYWx1eHdlIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NjA5MzI4NSwiZXhwIjoyMDcxNjY5Mjg1fQ.T5U8fimUYQGsqCEgadbo6EKqNVaWwKSY81c81sroP3A';

const supabase = createClient(supabaseUrl, supabaseServiceKey);

async function checkDatabase() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã –≤ Supabase...\n');

  // –°–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å
  const expectedTables = [
    'users', 'products', 'prayers', 'prayer_interactions', 'prayer_comments',
    'community_requests', 'donations', 'testimonials', 'orders', 'order_items',
    'notifications', 'payment_intents', 'refunds'
  ];

  console.log('üìã –ü–†–û–í–ï–†–ö–ê –¢–ê–ë–õ–ò–¶:\n');

  for (const table of expectedTables) {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
      const { data, count, error } = await supabase
        .from(table)
        .select('*', { count: 'exact', head: true });

      if (error) {
        console.log(`‚ùå ${table}: –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢`);
        continue;
      }

      console.log(`‚úÖ ${table}: —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–∑–∞–ø–∏—Å–µ–π: ${count || 0})`);

      // –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
      const { data: sampleData } = await supabase
        .from(table)
        .select('*')
        .limit(1);

      if (sampleData && sampleData.length > 0) {
        const columns = Object.keys(sampleData[0]);
        console.log(`   –ö–æ–ª–æ–Ω–∫–∏: ${columns.join(', ')}`);
      }

    } catch (err) {
      console.log(`‚ùå ${table}: –æ—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ - ${err.message}`);
    }
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –≤ –≤–∞–∂–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö
  console.log('\nüìä –î–ï–¢–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –í–ê–ñ–ù–´–• –¢–ê–ë–õ–ò–¶:\n');

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ users
  console.log('üë§ –¢–∞–±–ª–∏—Ü–∞ users:');
  try {
    const { data: userData } = await supabase
      .from('users')
      .select('*')
      .limit(1);

    if (userData && userData.length > 0) {
      const userColumns = Object.keys(userData[0]);
      console.log(`   –ù–∞–π–¥–µ–Ω–æ –∫–æ–ª–æ–Ω–æ–∫: ${userColumns.length}`);
      console.log(`   –ö–æ–ª–æ–Ω–∫–∏: ${userColumns.join(', ')}`);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–∂–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏
      const requiredColumns = ['id', 'email', 'password_hash', 'first_name', 'last_name', 'role', 'is_active'];
      const missingColumns = requiredColumns.filter(col => !userColumns.includes(col));

      if (missingColumns.length > 0) {
        console.log(`   ‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–æ–ª–æ–Ω–∫–∏: ${missingColumns.join(', ')}`);
      }
    }
  } catch (err) {
    console.log(`   ‚ùå –û—à–∏–±–∫–∞: ${err.message}`);
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ products
  console.log('\nüì¶ –¢–∞–±–ª–∏—Ü–∞ products:');
  try {
    const { data: productData } = await supabase
      .from('products')
      .select('*')
      .limit(1);

    if (productData && productData.length > 0) {
      const productColumns = Object.keys(productData[0]);
      console.log(`   –ù–∞–π–¥–µ–Ω–æ –∫–æ–ª–æ–Ω–æ–∫: ${productColumns.length}`);
      console.log(`   –ö–æ–ª–æ–Ω–∫–∏: ${productColumns.join(', ')}`);
    }
  } catch (err) {
    console.log(`   ‚ùå –û—à–∏–±–∫–∞: ${err.message}`);
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ prayers
  console.log('\nüôè –¢–∞–±–ª–∏—Ü–∞ prayers:');
  try {
    const { data: prayerData } = await supabase
      .from('prayers')
      .select('*')
      .limit(1);

    if (prayerData && prayerData.length > 0) {
      const prayerColumns = Object.keys(prayerData[0]);
      console.log(`   –ù–∞–π–¥–µ–Ω–æ –∫–æ–ª–æ–Ω–æ–∫: ${prayerColumns.length}`);
      console.log(`   –ö–æ–ª–æ–Ω–∫–∏: ${prayerColumns.join(', ')}`);
    }
  } catch (err) {
    console.log(`   ‚ùå –û—à–∏–±–∫–∞: ${err.message}`);
  }

  console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
}

checkDatabase();