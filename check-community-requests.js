import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

const supabaseUrl = process.env.VITE_SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

const supabase = createClient(supabaseUrl, supabaseServiceKey);

async function checkCommunityRequests() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º community requests...\n');

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ requests
    const { data: requests, error } = await supabase
      .from('community_requests')
      .select('*')
      .order('created_at', { ascending: false });

    if (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ requests:', error);
      return;
    }

    console.log(`–ù–∞–π–¥–µ–Ω–æ requests: ${requests.length}\n`);

    if (requests.length > 0) {
      console.log('–ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 requests:');
      requests.slice(0, 5).forEach((req, index) => {
        console.log(`\n${index + 1}. ${req.title}`);
        console.log(`   Status: ${req.status}`);
        console.log(`   Category: ${req.category}`);
        console.log(`   Created: ${new Date(req.created_at).toLocaleString()}`);
        console.log(`   Target: $${req.target_amount}`);
        console.log(`   Raised: $${req.raised_amount}`);
      });
    }

    // –ü—Ä–æ–≤–µ—Ä–∏–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    const activeRequests = requests.filter(r => r.status === 'active');
    console.log(`\n‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: ${activeRequests.length}`);

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error);
  }
}

checkCommunityRequests();